{"version":3,"sources":["styles.js","components/Categories/styles.js","components/Categories/index.js","components/CatList/styles.js","components/CatList/index.js","App.js","index.js"],"names":["createGlobalStyle","GlobalIcons","styled","div","props","modal","Sidebar","aside","ListCategory","ul","ButtonCategory","button","value","css","Categories","state","categories","this","request","setState","fetch","json","data","choosedCategory","setCategory","map","category","key","id","type","onClick","e","String","name","Component","Container","main","fadeIn","keyframes","ButtonLoad","show","CatList","arrayCats","showButton","loadCats","a","requestAPI","loadMore","newData","prevState","handleScroll","scrollTop","nativeEvent","srcElement","result","scrollHeight","valueRef","clientHeight","prevProps","onScroll","cat","src","url","alt","App","modalOpen","target","handleModalMenu","color","size","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ce219d52.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n    list-style: none;\n    font-family: 'Anonymous Pro', monospace;\n  }\n\n  html, body {\n    height: 100%;\n  }\n\n  #root {\n    display: flex;\n    flex-direction: row;\n    align-items: flex-start;\n    justify-content: space-between;\n    height: 100%;\n    background: #1D1D1F;\n\n    @media (max-width: 680px) {\n      justify-content: center;\n    }\n  }\n`;\n\nexport const GlobalIcons = styled.div`\n  svg {\n    display: none;\n  }\n\n  @media (max-width: 680px) {\n    svg {\n      position: absolute;\n      left: 5%;\n      top: 25px;\n      cursor: pointer;\n      z-index: 1;\n    }\n    .menu {\n      display: ${props => (props.modal ? 'none' : 'block')};\n    }\n\n    .closeMenu {\n      display: ${props => (props.modal ? 'block' : 'none')};\n    }\n  }\n`;\n","import styled, { css } from 'styled-components';\n\nexport const Sidebar = styled.aside`\n  height: 100%;\n  width: 35vw;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n\n  @media (max-width: 680px) {\n    display: ${props => (props.modal ? 'flex' : 'none')};\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    background: rgba(0, 0, 0, 0.8);\n  }\n\n  h2 {\n    color: #fff;\n    text-transform: uppercase;\n    margin: 40px 0 20px 0;\n    font-size: 38px;\n  }\n`;\n\nexport const ListCategory = styled.ul`\n  li {\n    color: #fff;\n    font-size: 36px;\n    margin: 0 0 10px 0;\n  }\n`;\n\nexport const ButtonCategory = styled.button`\n  width: 160px;\n  padding: 10px 0;\n  background: none;\n  border: 2px solid #fff;\n  border-radius: 50px;\n  color: #fff;\n  text-transform: uppercase;\n  font-size: 24px;\n  cursor: pointer;\n\n  &:hover {\n    background: #4c25eb;\n  }\n\n  ${props =>\n    props.value === false &&\n    css`\n      background: #4c25eb;\n    `}\n`;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Sidebar, ListCategory, ButtonCategory } from './styles';\n\nexport default class Categories extends Component {\n  state = {\n    categories: [],\n  };\n\n  async componentDidMount() {\n    this.setState({ categories: await this.request() });\n  }\n\n  async request() {\n    const data = await (\n      await fetch('https://api.thecatapi.com/v1/categories')\n    ).json();\n    return data;\n  }\n\n  render() {\n    const { categories } = this.state;\n    const { choosedCategory, setCategory, modal } = this.props;\n    return (\n      <Sidebar modal={modal}>\n        <h2>Categories</h2>\n        <ListCategory>\n          {categories.map(category => (\n            <li key={category.id}>\n              <ButtonCategory\n                type=\"button\"\n                onClick={e => setCategory(e)}\n                value={\n                  String(category.id) === choosedCategory ? false : category.id\n                }\n              >\n                {category.name}\n              </ButtonCategory>\n            </li>\n          ))}\n        </ListCategory>\n      </Sidebar>\n    );\n  }\n}\n\nCategories.propTypes = {\n  choosedCategory: PropTypes.string.isRequired,\n  setCategory: PropTypes.func.isRequired,\n  modal: PropTypes.bool.isRequired,\n};\n","import styled, { css, keyframes } from 'styled-components';\n\nexport const Container = styled.main`\n  height: 95%;\n  width: 65vw;\n  background: #fff;\n  border-radius: 10px;\n  margin: 20px 20px 0px 0;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  @media (max-width: 680px) {\n    width: 70vw;\n    margin: 20px 0 0 0;\n    }\n  }\n\n  h1 {\n    padding: 0 15px 0 15px;\n  }\n\n  ul {\n    height: 100%;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    overflow-y: scroll;\n    justify-content: space-around;\n    align-items: center;\n    padding-bottom: 100px;\n\n    &::-webkit-scrollbar-track {\n      -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);\n      background-color: #f5f5f5;\n    }\n\n    &::-webkit-scrollbar {\n      width: 6px;\n      background-color: #f5f5f5;\n    }\n\n    &::-webkit-scrollbar-thumb {\n      background-color: #000000;\n    }\n\n    li {\n      max-width: 300px;\n      margin: 30px 0px 0px 20px;\n\n      @media (max-width: 680px) {\n        margin: 30px 0 0 5px;\n      }\n\n      img {\n        width: 100%;\n        border-radius: 30px;\n      }\n    }\n  }\n`;\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity:1;\n  }\n`;\n\nexport const ButtonLoad = styled.button`\n  color: #4c25eb;\n  font-weight: bold;\n  background: none;\n  border: 3px solid #4c25eb;\n  padding: 10px 5px;\n  cursor: pointer;\n  font-size: 24px;\n  border-radius: 50px;\n  margin: 10px 0;\n  display: none;\n  outline: none;\n  animation: 1s ${fadeIn} ease-out;\n  position: fixed;\n  bottom: 20px;\n\n  &:hover {\n    background: #4c25eb;\n    color: #fff;\n  }\n\n  ${props =>\n    props.show &&\n    css`\n      display: block;\n    `}\n`;\n","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { Container, ButtonLoad } from './styles';\n\nexport default class CatList extends Component {\n  state = {\n    arrayCats: [],\n    showButton: false,\n  };\n\n  componentDidUpdate(prevProps) {\n    const { choosedCategory } = this.props;\n    if (choosedCategory !== prevProps.choosedCategory) {\n      return this.loadCats();\n    }\n    return null;\n  }\n\n  loadCats = async () => {\n    this.setState({ showButton: false, arrayCats: await this.requestAPI() });\n  };\n\n  loadMore = async () => {\n    const newData = await this.requestAPI();\n    this.setState(prevState => {\n      return {\n        arrayCats: [...prevState.arrayCats, ...newData],\n        showButton: false,\n      };\n    });\n  };\n\n  handleScroll = e => {\n    const { scrollTop } = e.nativeEvent.srcElement;\n    const result = e.nativeEvent.srcElement.scrollHeight - scrollTop;\n\n    const valueRef = e.nativeEvent.srcElement.clientHeight;\n\n    const { showButton } = this.state;\n\n    if (result === valueRef && showButton !== true && scrollTop !== 0) {\n      return this.setState({ showButton: true });\n    }\n    if (result !== valueRef && showButton === true) {\n      return this.setState({ showButton: false });\n    }\n  };\n\n  async requestAPI() {\n    const { choosedCategory } = this.props;\n    const data = await (\n      await fetch(\n        `https://api.thecatapi.com/v1/images/search?limit=10&category_ids=${choosedCategory}`\n      )\n    ).json();\n    return data;\n  }\n\n  render() {\n    const { arrayCats, showButton } = this.state;\n\n    const { choosedCategory } = this.props;\n\n    if (choosedCategory === '') {\n      return (\n        <Container>\n          <h1>Please choose a cat category.</h1>\n        </Container>\n      );\n    }\n\n    return (\n      <Container>\n        <ul onScroll={this.handleScroll}>\n          {arrayCats.map(cat => (\n            <li key={cat.id}>\n              <img src={cat.url} alt=\"Cute Cat\" />\n            </li>\n          ))}\n        </ul>\n        <ButtonLoad type=\"button\" onClick={this.loadMore} show={showButton}>\n          Load More\n        </ButtonLoad>\n      </Container>\n    );\n  }\n}\n\nCatList.propTypes = {\n  choosedCategory: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\n\nimport { FaBars, FaTimes } from 'react-icons/fa';\nimport GlobalStyle, { GlobalIcons } from './styles';\nimport Categories from './components/Categories';\nimport CatList from './components/CatList';\n\nclass App extends Component {\n  state = {\n    choosedCategory: '',\n    modalOpen: false,\n  };\n\n  setCategory = async e => {\n    if (e.target.value && e.target.value !== 'false') {\n      await this.setState({ choosedCategory: e.target.value });\n      this.handleModalMenu();\n    } else {\n      await this.setState({ choosedCategory: '' });\n    }\n  };\n\n  handleModalMenu = () => {\n    const { modalOpen } = this.state;\n\n    if (modalOpen === false) {\n      this.setState({ modalOpen: true });\n    } else {\n      this.setState({ modalOpen: false });\n    }\n  };\n\n  render() {\n    const { choosedCategory, modalOpen } = this.state;\n    return (\n      <>\n        <GlobalStyle />\n        <GlobalIcons modal={modalOpen}>\n          <FaBars\n            color=\"white\"\n            size={28}\n            className=\"menu\"\n            onClick={this.handleModalMenu}\n          />\n          <FaTimes\n            color=\"white\"\n            size={28}\n            className=\"closeMenu\"\n            onClick={this.handleModalMenu}\n          />\n        </GlobalIcons>\n        <Categories\n          choosedCategory={choosedCategory}\n          setCategory={this.setCategory}\n          modal={modalOpen}\n        />\n        <CatList choosedCategory={choosedCategory} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}